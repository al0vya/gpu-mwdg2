__global__
void parallel_tree_traversal
(
	int*  leaf_cell_indices,
	bool* tree_of_sig_details,
	int   num_cells_finest_grid
)
{	
	int thread_index = blockIdx.x * blockDim.x + threadIdx.x;
	
	if (thread_index < num_cells_finest_grid)
	{
	    Children cells_for_traversal();
		
		// each thread starts at the cell on the coarsest grid
		int current_cell = 0;
		int level        = 0;
		
		// the Morton code of the cell that a thread
		// tries to reach is the index of thread itself
		// e.g. thread with index "M" tries to get to
		// the cell on the finest grid with Morton code "M"
		int target_cell = thread_index;
		
		do
		{
		    // if the target cell is a child cell of
			// the current cell, then add the current cell's
			// children to the traversal stack
			if ( is_child(target_cell, current_cell) )
			{
			    bool significant = tree_of_sig_details[current_cell];
				
				if (not significant)
				{
				    // reached cell with insignificant detail
					// so store index of cell
					leaf_cell_indices[thread_index] = current_cell;
				}
				else
				{
				    if (level == max_level)
					{
					    // reached maximum refinement level
					    // so store index of cell
						leaf_cell_indices[thread_index] = current_cell;
					}
					else
					{
					    // not yet reached insignificant detail
						// or maximum refinement level, so keep
						// traversing by adding the children for traversal
						Children children = children_of(current_cell);
						
						current_cell = children.child_0;
						
						children.add_to(cells_for_traversal);
					}
				}
			}
			else
			{
			    current_cell = children.next_child()
			}
		}
		while (stackPtr != NULL)
	}
}